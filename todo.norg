* Notes
* Todo
  - (x) sha256 pass checking
  - (x) login form
  - (x) upload form
  - (x) set cookies
  - (x) response messages
  - (x) write files
  -- (x) handle overwrite
  - (x) logout button

  - (_) filesystem watcher for the database
        not needed

** ( ) settings file ?
   - ( ) toml(?) parser for settings
   - ( ) database file, port number
   - ( ) TTL time (default and remember me)
   - ( ) Storage location

** account stuff ?
   - (_) email maybe ?
   - ( ) sanitize usernames (Aa-Zz 0-9)
   -- currently no way to add users
   - (x) database ?
   - In-memory cache with automatic deletion upon expiration
   - Login checks against database and generates a UUID for the user
   - UUID is stored in a cookie and in the server's in-memory cache
     which points to the username
     username is also cached and it points to a bool which
     indicates whether the user is an admin
   - Upon every request, the server only checks the cache.
     The database is only accessed at login
   - ( ) remember REMEMBER ME for updating the cache ?
   - ( ) single cache - map string to struct
** ( ) USER CONTROL PANEL
   - ( ) template
   - ( ) buttons to open/close
   - ( ) list files
   -- ( ) option to delete files
   - ( ) option to change password ?

*** Admin access in panel
    - ( ) modify users from db
    - ( ) change passwords ?
          change password hashes ??
    - ( ) modify files from users storage
** Storage
   - ( ) decide and handle files location
   - ( ) limit users storage space
   - ( ) know the size before upload

** Logs 
  - (!) proper error logging

  - ( ) log who uploaded/deleted which files
        also ip and client data

** Finishing touches
   - ( ) add css 
   - ( ) rate limit
   - (x) database of users
         maybe sqlite cause it's lightweight
   - ( ) organize code
* 
